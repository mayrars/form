[{"/var/www/html/reactjs/form/src/index.js":"1","/var/www/html/reactjs/form/src/App.js":"2","/var/www/html/reactjs/form/src/components/SimpleInput.js":"3"},{"size":142,"mtime":1616595887000,"results":"4","hashOfConfig":"5"},{"size":168,"mtime":1616595983000,"results":"6","hashOfConfig":"5"},{"size":1871,"mtime":1646073258468,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"zc9x6m",{"filePath":"11","messages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"/var/www/html/reactjs/form/src/index.js",[],["16","17"],"/var/www/html/reactjs/form/src/App.js",[],"/var/www/html/reactjs/form/src/components/SimpleInput.js",["18"],"import { useEffect, useRef, useState } from \"react\";\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(true);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(true);\n\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      console.log(\"Name input is valid!\");\n    }\n  }, [enteredNameIsValid]);\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n    if (enteredName.trim() !== \"\") {\n      setEnteredNameIsValid(true);\n    }\n  };\n\n  const nameInputBlurHandler = event =>{\n    setEnteredNameTouched(true)\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n    }\n  }\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n    setEnteredNameIsValid(true);\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n    setEnteredName(\"\");\n  };\n\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n  const nameInputClasses = nameInputIsInvalid\n    ? \"form-control  invalid\"\n    : \"form-control\";\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          ref={nameInputRef}\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputChangeHandler}\n          onBlur={}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && (\n          <p className=\"error-text\">Name must not be empty</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n",{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":null,"fatal":true,"severity":2,"message":"23","line":54,"column":18},"no-native-reassign",["24"],"no-negated-in-lhs",["25"],"Parsing error: JSX attributes must only be assigned a non-empty expression.\n\n\u001b[0m \u001b[90m 52 |\u001b[39m           id\u001b[33m=\u001b[39m\u001b[32m\"name\"\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 53 |\u001b[39m           onChange\u001b[33m=\u001b[39m{nameInputChangeHandler}\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 54 |\u001b[39m           onBlur\u001b[33m=\u001b[39m{}\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 55 |\u001b[39m           value\u001b[33m=\u001b[39m{enteredName}\u001b[0m\n\u001b[0m \u001b[90m 56 |\u001b[39m         \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 57 |\u001b[39m         {nameInputIsInvalid \u001b[33m&&\u001b[39m (\u001b[0m","no-global-assign","no-unsafe-negation"]